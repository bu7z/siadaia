# Globale Konfiguration
proxy_cache_path /tmp/cache levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;

# HTTP Block, der alle HTTP-spezifischen Direktiven enthält
http {
    include       mime.types;
    default_type  application/octet-stream;

    server {
        listen 80;
        server_name localhost;

        # Zugriff nur aus dem VPN
        allow 10.0.0.0/24;
        deny all;

        # Statische Dateien effizient ausliefern
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # API → Weiterleitung an Flask-Backend
        location /api/ {
            proxy_pass http://10.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;  # Nützlich für HTTPS (falls aktiviert)
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Request-ID $request_id;
            proxy_http_version 1.1;
            proxy_set_header Connection "";  # Verbindung wiederverwendbar machen
            proxy_cache_bypass $http_upgrade;
        }

        # Caching für statische Dateien (JavaScript, CSS, Bilder)
        location ~* \.(?:css|js|jpg|jpeg|gif|png|svg|ico|woff|woff2|ttf|eot)$ {
            root /usr/share/nginx/html;
            expires 365d;  # Lange Cache-Dauer für unaufdringliche statische Dateien
            access_log off;  # Loggt keine Anfragen für statische Dateien, um Logs zu reduzieren
            add_header Cache-Control "public, max-age=31536000, immutable";  # Statisches Caching
        }

        # Optimierung von Keep-Alive und Timeouts
        keepalive_timeout 65s;  # Timeout für Keep-Alive-Verbindungen verlängern
        client_max_body_size 10M;  # Maximale Dateigröße für Uploads (kann je nach Bedarf angepasst werden)
        client_body_timeout 12s;  # Timeout für den Body der Anfrage
        send_timeout 10s;  # Timeout für den Versand von Antworten an den Client
        tcp_nopush on;  # Schaltet TCP Nagle-Algorithmus ein (erhöht die Performance bei großen Antworten)
        tcp_nodelay on;  # Deaktiviert Nagle (bessere Latenz bei kleinen Antworten)

        # Schnelleres Caching von 404-Seiten (optional, wenn du eine solche Seite häufig anforderst)
        open_file_cache max=1000 inactive=20s;  # Offen gehaltene Dateien im Cache, um IO zu reduzieren
        open_file_cache_valid 30s;  # Aktualisierung des offenen Datei-Caches alle 30 Sekunden
        open_file_cache_min_uses 2;  # Die Datei muss mindestens 2 Mal angefordert werden, bevor sie im Cache bleibt
    }
}
